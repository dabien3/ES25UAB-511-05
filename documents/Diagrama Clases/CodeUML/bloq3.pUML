@startuml
class dataUsuario <<entity>> {
    -id: string
    -nombre: string
    -email: string
    -telefono: string
}

class dataCliente <<entity>> {
    -direccion: string
    -metodoPago: string
    +verOpcionesEntrega(): void
    +seleccionarOpcion(opcion: string): void
    +confirmarEntrega(): void
}

class dataCocinero <<entity>> {
    -especialidad: string
    -disponible: boolean
    +aceptarEntrega(): void
}

class dataRepartidor <<entity>> {
    -vehiculo: string
    -activo: boolean
    -ubicacionActual: string
    +aceptarPedido(): void
}

dataUsuario <|-- dataCliente
dataUsuario <|-- dataCocinero
dataUsuario <|-- dataRepartidor

class Pedido <<entity>> {
    -id: string
    -estado: string
    -items: string[]
    -tipoEntrega: string
    +verificarDisponibilidad(): string[]
    +asociarRepartidor(): void
    +asociarCocinero(): void
    +marcarParaRecogida(): void
    +actualizarEstado(): void
}

class Envio <<entity>> {
    -id: string
    -costo: float
    -distancia: float
    +calcularCosto(direccion: string): float
    +setCostoGratis(): void
}

interface IUICliente <<boundary>> {
    +mostrarOpciones(opciones: string[]): void
    +mostrarCosto(costo: float): void
    +mostrarLink(link: string): void
    +mostrarConfirmacionRecogida(): void
    +notificarConfirmacionFinal(): void
}

interface IUICocinero <<boundary>> {
    +notificarRecogida(): void
}

interface IUIRepartidor <<boundary>> {
    +confirmarAsignacion(): void
}

class GestorPedido <<control>> {
    +obtenerOpcionesEntrega(): string[]
    +opcionSeleccionada(opcion: string): void
    +confirmarEntrega(): void
    +generarSeguimiento(): string
}

class ServicioMaps <<boundary>> {
    +generarSeguimiento(): string
}

dataCliente "1" -- "0..*" Pedido
Pedido "1" *-- "1" Envio
Envio "1" --> "0..1" dataRepartidor
Pedido "1" --> "0..1" dataCocinero

GestorPedido --> Pedido
GestorPedido --> Envio
GestorPedido --> IUICliente
GestorPedido --> IUICocinero
GestorPedido --> IUIRepartidor
GestorPedido --> ServicioMaps
@enduml
