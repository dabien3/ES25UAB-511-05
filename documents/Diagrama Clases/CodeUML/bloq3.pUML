@startuml
class Usuario <<entity>> {
    -nombre: string
}

class Cliente <<entity>> {
    -direccion: string
    +consultarPedido(): Pedido
}

class Cocinero <<entity>> {
    -direccion: string
    +prepararPedido(pedido: Pedido): void
}

class Repartidor <<entity>> {
    -idSeguimiento : string
    +asignarSeguimiento(idSeguimiento : string): void
    +eliminarSeguimiento(): void

}

Usuario <|-- Cliente
Usuario <|-- Cocinero
Usuario <|-- Repartidor

class Pedido <<entity>> {
    -id: int
    -estado: string
    -total: float
    +iniciarEnvio(): void
    +seguirProgreso(): void
}

class Envio <<entity>> {
    -tipo: string
    -costo: float
    +calcularCosto(): float
    +esGratuito(): bool
}

class GestorPedido <<control>> {
    +crearPedido(cliente: Cliente): Pedido
    +asignarCocinero(cocinero: Cocinero, pedido: Pedido): void
    +asignarRepartidor(envio: Envio, repartidor: Repartidor): void
    +obtenerLinkSeguimiento(pedido: Pedido): string
}

class ServicioMaps <<boundary>> {
    +generarLink(idSeguimiento : string): string
}


Cliente "1" -- "0..*" Pedido : realiza
Pedido "1" --> "1" Cliente : pertenece a
Cocinero "1" -- "0..*" Pedido : prepara
Pedido "1" --> "1" Cocinero : asignado a
Pedido "1" *-- "1" Envio : contiene
Envio "1" --> "1" Repartidor : entregadoPor
GestorPedido --> Pedido
GestorPedido --> Cliente
GestorPedido --> Cocinero
GestorPedido --> Envio
GestorPedido --> Repartidor
GestorPedido --> ServicioMaps : usa
@enduml
