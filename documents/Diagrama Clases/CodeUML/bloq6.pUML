@startuml

class PlatoPropuesto <<entity>> {
  - descripcion : String
  - ingredientes : String
  + mostrarDescripcion() : String
  + editarPlato() : void
}

class MenuPropuesto <<entity>> {
  - id : int
  - nombreMenu : String
  + mostrarMenu() : String
}

class Chat <<entity>> {
  - mensajes : String
  + enviarMensaje(msg: String) : void
}

class Suscripcion <<entity>> {
  - activa : boolean
  - fechaInicio : Date
  - fechaFin : Date
  + estaActiva() : boolean
}

class Punto <<entity>> {
  - cantidad : int
  - descripcion : String
  + obtenerCantidad() : int
}

class Comanda <<entity>> {
  - id : int
  - total : float
  + generarPuntos() : int
}

class GestorExtras <<control>> {
  +proponerPlato(desc: String, ing: String) : void
  +enviarMensaje(msg: String) : void
  +activarSuscripcion() : void
  +consultarPuntos() : int
}

class InterfazFuncionalidades <<boundary>> {
  +proponerPlato() : void
  +comunicarseConCocinero() : void
  +activarSuscripcion() : void
  +consultarPuntos() : int
}

class Cliente <<entity>>

Cliente --> InterfazFuncionalidades

InterfazFuncionalidades --> GestorExtras

GestorExtras --> PlatoPropuesto : crea >
PlatoPropuesto --> MenuPropuesto : aparece en >
MenuPropuesto --> Chat : permite >

GestorExtras --> Chat : usa >
GestorExtras --> Suscripcion : activa/verifica >
GestorExtras --> Punto : consulta >
Comanda --> Punto : genera >
Cliente --> Comanda : realiza >

@enduml
